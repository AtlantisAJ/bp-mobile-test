export function replacePlaceholders(str, values) {
    // Используем метод `replace` для замены всех вхождений шаблонов в строке `str`.
    // Регулярное выражение `/{{(\w+)}}/g` ищет все подстроки, которые соответствуют шаблону `{{ключ}}`.
    // - `{{` и `}}` соответствуют буквальным скобкам.
    // - `(\w+)` создает захватывающую группу, которая соответствует одной или более буквенно-цифровых символов (включая подчеркивание). Это будет считаться "ключом".
    // - `g` - это глобальный флаг, означающий, что заменяются все вхождения шаблона, а не только первое.
    return str.replace(/{{(\w+)}}/g, (_, key) => {
        // Для каждого найденного совпадения вызывается эта функция обратного вызова.
        // - `_` - это вся найденная подстрока (например, '{{name}}'). Мы ее не используем, поэтому обозначаем как '_'.
        // - `key` - это значение, захваченное первой группой в регулярном выражении (то есть, содержимое между скобками, например, 'name').

        // Мы ищем значение `key` в объекте `values`.
        // - Если `values[key]` существует (то есть, в объекте `values` есть свойство с таким ключом), то мы возвращаем это значение для замены плейсхолдера.
        // - Если `values[key]` не существует (undefined), мы возвращаем исходный плейсхолдер `{{${key}}}`, чтобы указать, что значение для этой переменной не было предоставлено.
        return values[key] || `{{${key}}}`;
    });
}
